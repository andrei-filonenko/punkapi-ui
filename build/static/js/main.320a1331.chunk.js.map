{"version":3,"sources":["app/components/Button.tsx","features/random_beer/styled.tsx","features/random_beer/BeerCard.tsx","app/hooks.tsx","features/random_beer/selectors.ts","util.ts","app/schema.ts","app/beerApi.ts","app/beerSlice.ts","features/random_beer/RandomBeer.tsx","features/beer_search/styled.tsx","features/beer_search/SearchTypeSelector.tsx","features/beer_search/SearchBar.tsx","features/beer_search/BeerSearch.tsx","features/beer_search/BeerList.tsx","App.tsx","reportWebVitals.ts","app/store.ts","index.tsx"],"names":["Button","styled","button","primary","BeerCardContainer","div","state","ErrorContainer","tw","ImgContainer","BodyContainer","Header","BeerName","h2","Abv","h3","ActionButtons","Description","BeerCard","beer","onFetchBeer","onFetchNonAlcoholicBeer","errorMessage","isLoading","content","name","abv","description","error","role","className","alt","src","image_url","onClick","disabled","useAppSelector","useSelector","getAllNonAlcoholicBeers","Object","values","beers","byId","filter","pickRandom","list","Math","floor","random","length","UnitValue","Record","value","Number","nullable","unit","String","Volume","extend","Union","Literal","Temperature","Total","Weight","BoilSpec","temp","duration","Hop","amount","add","attribute","Malt","Ingredients","malt","Array","hops","yeast","Fermentation","Method","mash_temp","fermentation","twist","Beer","attenuation_level","boil_volume","brewers_tips","contributed_by","ebc","first_brewed","food_pairing","ibu","id","ingredients","method","ph","srm","tagline","target_fg","target_og","volume","BeerList","withBrand","withConstraint","str","match","FormattedDate","Date","parse","BeerQueryParams","abv_gt","optional","abv_lt","ibu_gt","ibu_lt","ebc_gt","ebc_lt","beer_name","brewed_before","brewed_after","food","ids","per_page","page","getRandomBeer","a","fetch","resp","json","data","check","getBeersForPage","params","queryParams","entries","map","k","v","encodeURIComponent","join","res","getBeers","loaded","result","concat","exports","fetchBeersByName","createAsyncThunk","thumpApi","catch","rejectWithValue","fetchBeersByDate","d","month","getUTCMonth","year","getUTCFullYear","formatDate","nonAlcoholicLoaded","createAction","addBeers","fetchRandomBeer","isNonAlcoholic","getState","currentBeerId","randomBeer","beerApi","nextBeer","_get_beers_action","isNonAlcoholicBeerReceied","b","dispatch","beerSlice","createSlice","initialState","randomBeerState","reducers","addBeer","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","lastError","displayItems","actions","getBeer","getPanelState","getError","RandomBeer","useDispatch","panelState","useEffect","fetchBeer","useCallback","fetchNonAlcoholicBeer","message","SearchSectionContainer","ErrorMessage","span","SearchBarContainer","SearchTypeContainer","SearchTypeSelector","onChangeValue","useState","setValue","onChange","e","target","defaultChecked","type","SearchBar","placeholder","BeerSearch","searchType","setSearchType","text","setText","undefined","validationMessage","setValidationMessage","handleTextUpdate","success","vm","validate","handleSubmit","preventDefault","date","handleSearchType","t","onSubmit","getBeeers","BeerListContainer","components","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","beerReducer","w","window","api","s","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.320a1331.chunk.js","sourcesContent":["import tw, { styled } from \"twin.macro\"\n\ninterface Props {\n    primary?: boolean\n}\n\nconst Button = styled.button<Props>`\n  ${({ primary }) =>\n    primary\n      ? tw`\n        bg-black text-white \n         hover:bg-gray-700\n      `\n      : tw`\n        border border-gray-300 \n        hover:(text-black border-black)\n    `}\n  ${tw`\n     active:shadow-inner\n     tracking-widest uppercase font-bold\n     transition-colors duration-200\n     flex \n     flex-auto\n     items-center \n     justify-center \n     py-2\n  `}\n    :disabled {\n    ${tw`opacity-75`}\n    }\n    `\nexport default Button\n","/**\n * Styled components are too small to warant their own files\n */\nimport tw, { styled } from 'twin.macro'\n\ninterface LoadingProps {\n  state: 'idle' | 'loading' | 'failure'\n}\n\nexport const BeerCardContainer = styled.div<LoadingProps>`\n  ${({ state }) => state === 'loading' && tw`opacity-50`}\n  ${tw`\n    transition-opacity duration-200\n    md:rounded-md\n    shadow-md my-5\n    flex max-w-7xl \n    mx-auto py-6 sm:px-6 lg:px-8 \n    h-full`\n  }\n`\nexport const ErrorContainer = tw.div`flex h-64 flex-col flex-1 justify-center text-red-700 p-4`\n\nexport const ImgContainer = styled.div`\n  ${tw`flex-none w-1/5 relative text-center h-80`}\n  > img {\n    ${tw`absolute mx-auto py-2 inset-0 h-full object-contain`}\n  } `\n\nexport const BodyContainer = tw.div`flex flex-col flex-1 ml-5 px-3`\n\nexport const Header = tw.div`flex flex-col font-bold text-xl md:flex-row`\n\nexport const BeerName = tw.h2`tracking-widest uppercase font-bold text-left m-3 text-xl mr-auto`\n\nexport const Abv = tw.h3`px-3 italic font-serif oldstyle-nums my-3 text-left`\n\nexport const ActionButtons = styled.div`\n    ${tw`flex space-x-3 mb-4 mt-auto pr-2 text-sm font-medium flex-col md:flex-row md:ml-3`}\n    && > button:nth-child(2) {\n      ${tw`md:flex-none md:px-3 m-0`}\n    } \n    & > button:nth-child(1) {\n      ${tw`md:(mr-2 mb-0) mb-2`}\n    }\n`\n\nexport const Description = styled.div`\n    ${tw`flex`}\n    > p {\n      ${tw`text-sm p-2 m-1 text-left`}\n    }\n`;\n","import { IBeer } from '../../app/schema'\nimport Button from '../../app/components/Button'\nimport {\n  Header, BeerName, Abv, Description, ErrorContainer, BeerCardContainer, ImgContainer, BodyContainer, ActionButtons\n} from './styled'\n\nconst DEFAULT_IMAGE = 'https://images.punkapi.com/v2/keg.png'\n\ninterface Props {\n  beer: IBeer\n  onFetchBeer: () => void\n  onFetchNonAlcoholicBeer: () => void\n  state: 'idle' | 'loading' | 'failure'\n  errorMessage?: string\n}\n\nexport default function BeerCard({\n  beer,\n  onFetchBeer,\n  onFetchNonAlcoholicBeer,\n  errorMessage,\n  state = 'idle',\n}: Props) {\n  const isLoading = state === 'loading'\n\n  const content = (\n    <>\n      <Header>\n        <BeerName>{beer.name}</BeerName>\n        <Abv>Abv.&nbsp;{beer.abv}%</Abv>\n      </Header>\n      <Description>\n        <p>{beer.description}</p>\n      </Description>\n    </>\n  ) \n\n  const error = (\n    <ErrorContainer\n      role=\"alert\"\n    >\n      <p className=\"font-bold\">Error</p>\n      <p>{errorMessage}</p>\n    </ErrorContainer>\n  )\n\n  return (\n    <BeerCardContainer state={state}>\n      <ImgContainer>\n        <img alt=\"\" src={beer.image_url || DEFAULT_IMAGE} />\n      </ImgContainer>\n      <BodyContainer>\n        {state === 'failure' ? error : content}\n        <ActionButtons>\n          <Button onClick={onFetchBeer} primary disabled={isLoading}>\n            Get Random Beer\n          </Button>\n          <Button onClick={onFetchNonAlcoholicBeer} disabled={isLoading}>\n            Random Alcohol-Free\n          </Button>\n        </ActionButtons>\n      </BodyContainer>\n    </BeerCardContainer>\n  )\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { RootState } from '../../app/store'\n\n/**\n *\n * Select all non-alcoholic beers from a store\n *\n * @param state\n * @returns list of non-alcholic beers\n */\nexport const getAllNonAlcoholicBeers = (state: RootState) =>\n  Object.values(state.beers.byId).filter((beer) => {\n      return !!beer.abv && (beer.abv <= 0.51)\n  })\n","export function pickRandom<T>(list: Array<T>): T {\n  return list[Math.floor(Math.random() * list.length)]\n}\n\nexport function formatDate(d: Date) {\n  const month = d.getUTCMonth() + 1\n  const year = d.getUTCFullYear()\n  return `${month}-${year}`\n}\n","import { Record, Number, String, Literal, Union, Array, Static } from 'runtypes'\n\nconst UnitValue = Record({\n  value: Number.nullable(),\n  unit: String,\n})\n\nexport const Volume = UnitValue.extend({\n  unit: Union(Literal('ml'), Literal('litres')),\n})\n\nexport const Temperature = UnitValue.extend({\n  unit: Literal('celsius'),\n})\n\nexport const Total = UnitValue.extend({\n  unit: Literal('total'),\n})\n\nexport const Weight = UnitValue.extend({\n  unit: Union(Literal('grams'), Literal('kilograms'), Literal('kilogram')),\n})\n\nexport const BoilSpec = Record({\n  temp: Temperature,\n  duration: Number.nullable(),\n})\n\nexport const Hop = Record({\n  name: String.nullable(),\n  amount: Union(Weight, Volume, Total),\n  add: String.nullable(),\n  attribute: String,\n})\n\nexport const Malt = Record({\n  name: String.nullable(),\n  amount: Weight,\n})\nexport type IMalt = Static<typeof Malt>\n\nexport const Ingredients = Record({\n  malt: Array(Malt),\n  hops: Array(Hop),\n  yeast: String.nullable(),\n})\n\nexport const Fermentation = Record({\n  temp: Temperature,\n})\n\nexport const Method = Record({\n  mash_temp: Array(BoilSpec),\n  fermentation: Fermentation,\n  twist: String.nullable(),\n})\n\nexport const Beer = Record({\n  abv: Number.nullable(),\n  attenuation_level: Number.nullable(),\n  boil_volume: Volume.nullable(),\n  brewers_tips: String.nullable(),\n  contributed_by: String.nullable(),\n  description: String,\n  ebc: Number.nullable(),\n  first_brewed: String.nullable(),\n  food_pairing: Array(String),\n  ibu: Number.nullable(),\n  id: Number,\n  image_url: String.nullable(),\n  ingredients: Ingredients,\n  method: Method,\n  name: String,\n  ph: Number.nullable(),\n  srm: Number.nullable(),\n  tagline: String.nullable(),\n  target_fg: Number.nullable(),\n  target_og: Number.nullable(),\n  volume: Volume,\n})\nexport type IBeer = Static<typeof Beer>\n\nexport const BeerList = Array(Beer)\n\nexport const BeerName = String.withBrand('BeerName').withConstraint(\n  (str) =>\n    !!str.match('^[A-Za-z0-9 -]+$') ||\n    'Search text must contain only hyphens, letters, numbers and spaces'\n)\n\nexport const FormattedDate = BeerName.withBrand(\n  'FormattedDate'\n).withConstraint((str) => {\n  // FIXME: a proper parser should be implemented, or better use a standard calendar pop up\n  return !!Date.parse(str) || 'Can not parse date, use ISO date format'\n})\n\nexport const BeerQueryParams = Record({\n  abv_gt: Number.optional(), // Returns all beers with ABV greater than the supplied number\n  abv_lt: Number.optional(), // Returns all beers with ABV less than the supplied number\n  ibu_gt: Number.optional(), // Returns all beers with IBU greater than the supplied number\n  ibu_lt: Number.optional(), // Returns all beers with IBU less than the supplied number\n  ebc_gt: Number.optional(), // Returns all beers with EBC greater than the supplied number\n  ebc_lt: Number.optional(), // Returns all beers with EBC less than the supplied number\n  beer_name: String.optional(), // Returns all beers matching the supplied name (this will match partial strings as well so e.g punk will return Punk IPA), if you need to add spaces just add an underscore (_).\n  yeast: String.optional(), // Returns all beers matching the supplied yeast name, this performs a fuzzy match, if you need to add spaces just add an underscore (_).\n  brewed_before: String.optional(), // Returns all beers brewed before this date, the date format is mm-yyyy e.g 10-2011\n  brewed_after: String.optional(), // Returns all beers brewed after this date, the date format is mm-yyyy e.g 10-2011\n  hops: String.optional(), // Returns all beers matching the supplied hops name, this performs a fuzzy match, if you need to add spaces just add an underscore (_).\n  malt: String.optional(), // Returns all beers matching the supplied malt name, this performs a fuzzy match, if you need to add spaces just add an underscore (_).\n  food: String.optional(), // Returns all beers matching the supplied food string, this performs a fuzzy match, if you need to add spaces just add an underscore (_).\n  ids: String.optional(), // (id|id|...)\n  per_page: Number.optional(), // Returns number of beers per page, max=80\n  page: Number.optional() // Returns a page number  \n})\n\nexport type IBeerQueryParams = Static<typeof BeerQueryParams>\n","import {\n  Beer,\n  BeerList,\n  BeerQueryParams,\n  IBeer,\n  IBeerQueryParams,\n} from './schema'\n\nconst PER_PAGE = 80\n\nexport async function getRandomBeer(): Promise<IBeer> {\n  const resp = await fetch('https://api.punkapi.com/v2/beers/random')\n  const data = await resp.json()\n  const beer = Beer.check(data[0])\n  return beer\n}\n\nasync function getBeersForPage(\n  params: IBeerQueryParams,\n  page: number,\n  per_page = PER_PAGE\n): Promise<IBeer[]> {\n  const queryParams = Object.entries({ ...params, page, per_page })\n    .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n    .join('&')\n  const res = await fetch(`https://api.punkapi.com/v2/beers?${queryParams}`)\n  const data = await res.json()\n  return BeerList.check(data)\n}\n\nexport async function getBeers(\n  queryParams: IBeerQueryParams = {},\n  page: number = 1,\n  loaded: IBeer[] = []\n): Promise<IBeer[]> {\n  // do validation of input parameters\n  const params = BeerQueryParams.check(queryParams)\n  const resp = await getBeersForPage(params, page)\n  const result = loaded.concat(resp)\n  if (resp.length < 80) {\n    return result\n  }\n  return getBeers(queryParams, page + 1, result)\n}\n\nconst exports = { getRandomBeer, getBeers }\nexport default exports\n","import { createAction, createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { IBeer } from './schema'\nimport { RootState } from './store'\nimport { getAllNonAlcoholicBeers } from '../features/random_beer/selectors'\n\nimport { formatDate, pickRandom } from '../util'\nimport beerApi, { getBeers } from './beerApi'\n\nexport interface Error {\n  message?: string\n}\n\nexport interface IBeerState {\n  randomBeerState: 'idle' | 'loading' | 'failure',\n  byId: { [id: number]: IBeer }\n  randomBeer?: IBeer\n  isNonAlcoholicBeerReceied?: boolean\n  lastError?: Error\n  displayItems?: IBeer[]\n}\n\nexport const initialState = {\n  randomBeerState: 'idle',\n  byId: {},\n} as IBeerState\n\ntype ApiConfig = { state: RootState }\n\nexport const fetchBeersByName = createAsyncThunk<\n  IBeer[],\n  string,\n  ApiConfig\n>(\n  'beers/fetchBeersByName',\n  (beer_name, thumpApi) => {\n    return getBeers({ beer_name }).catch(thumpApi.rejectWithValue)\n  }\n)\n\nexport const fetchBeersByDate = createAsyncThunk<\n  IBeer[],\n  Date,\n  ApiConfig\n>(\n  'beers/fetchBeersDate',\n  (d, thumpApi) => {\n    const brewed_before = formatDate(d) \n    return getBeers({ brewed_before }).catch(thumpApi.rejectWithValue)\n  }\n)\n\n\nexport const nonAlcoholicLoaded = createAction<void>('beers/nonAlcoholicLoaded')\nexport const addBeers = createAction<IBeer[]>('beers/addBeers')\nexport const fetchRandomBeer = createAsyncThunk<\n  IBeer,\n  boolean | undefined,\n  ApiConfig\n>(\n  'beers/fetchRandomBeer',\n  async function _get_beers_action(isNonAlcoholic, thumpApi) {\n    const state = thumpApi.getState()\n    const currentBeerId = state.beers.randomBeer?.id\n    let nextBeer: IBeer\n    if (!isNonAlcoholic) {\n      nextBeer = await beerApi.getRandomBeer()\n      if (currentBeerId === nextBeer.id) {\n        // we should try again if we've got the same id by chance\n        nextBeer = await _get_beers_action(isNonAlcoholic, thumpApi)\n      }\n      return nextBeer\n    }\n    // let's see if the beers are already in the cache\n    if (state.beers.isNonAlcoholicBeerReceied) {\n      const beers = getAllNonAlcoholicBeers(state)\n      // if so pick random one that's not displayed\n      return pickRandom(beers.filter((b) => b.id !== currentBeerId))\n    }\n    const beers = await beerApi.getBeers({ abv_lt: 0.51 })\n    // set flag in the cache that all random beers are already loadeed\n    // we don't have an endpoint for random non-alcoholic beer\n    // so we'll get all of them\n    thumpApi.dispatch(nonAlcoholicLoaded())\n    // load beers into cache for future use\n    thumpApi.dispatch(addBeers(beers))\n    return pickRandom(beers.filter((b) => b.id !== currentBeerId))\n  }\n)\n\nexport const beerSlice = createSlice({\n  name: 'beers',\n  initialState,\n  reducers: {\n    addBeer(state, action: PayloadAction<IBeer>) {\n      state.byId[action.payload.id] = action.payload\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(nonAlcoholicLoaded, (state, action) => {\n        state.isNonAlcoholicBeerReceied = true\n      })\n      .addCase(addBeers, (state, action) => {\n        for (const beer of action.payload) {\n          state.byId[beer.id] = beer\n        }\n      })\n      .addCase(fetchRandomBeer.pending, (state) => {\n        state.randomBeerState = 'loading'\n      })\n      .addCase(fetchRandomBeer.fulfilled, (state, action) => {\n        const beer = action.payload\n        state.randomBeer = beer\n        state.byId[beer.id] = beer\n        state.randomBeerState = 'idle'\n      })\n      .addCase(fetchRandomBeer.rejected, (state, action) => {\n        state.randomBeerState = 'failure'\n        state.lastError = action.error\n      })\n      .addCase(fetchBeersByDate.fulfilled, (state, action) => {\n        state.displayItems = action.payload\n      })\n      .addCase(fetchBeersByName.fulfilled, (state, action) => {\n        state.displayItems = action.payload\n      })\n  },\n})\n\nexport const { addBeer } = beerSlice.actions\n\nexport default beerSlice.reducer\n","import BeerCard from './BeerCard'\nimport { useAppSelector } from '../../app/hooks'\nimport { useEffect, useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { fetchRandomBeer } from '../../app/beerSlice'\nimport { RootState } from '../../app/store'\n\nconst getBeer = (state: RootState) => state.beers.randomBeer || null\n\nconst getPanelState = (state: RootState) => state.beers.randomBeerState\n\nconst getError = (state: RootState) => state.beers.lastError\n\nexport default function RandomBeer() {\n  const dispatch = useDispatch()\n  \n  const beer = useAppSelector(getBeer)\n  const panelState = useAppSelector(getPanelState)\n  const error = useAppSelector(getError)\n\n\n  useEffect(() => {\n    dispatch(fetchRandomBeer()) \n  }, [dispatch])  \n\n  const fetchBeer = useCallback(() => {\n    dispatch(fetchRandomBeer())\n  }, [dispatch])\n\n  const fetchNonAlcoholicBeer = useCallback(() => {\n    dispatch(fetchRandomBeer(true))\n  }, [dispatch])\n\n\n  if (beer !== null) {\n    return (\n      <BeerCard\n        errorMessage={error?.message}\n        beer={beer}\n        onFetchBeer={fetchBeer}\n        onFetchNonAlcoholicBeer={fetchNonAlcoholicBeer}\n        state = {panelState}\n      />\n    )\n  }\n  return null\n}\n","import tw, { styled } from 'twin.macro';\n\n\nexport const SearchSectionContainer = styled.div`\n  ${tw`my-5 flex max-w-7xl mx-auto py-6 sm:px-6 lg:px-8 h-full`}\n  &> form.filter {\n    ${tw`flex flex-col m-3 mt-6 flex-1`}\n  }\n`;\n\nexport const ErrorMessage = styled.span`\n  ${tw`p-2 uppercase text-pink-600 text-xs`}\n`;\n\nexport const SearchBarContainer = styled.span`\n  ${tw`bg-white shadow relative flex font-bold`}\n\n  && > ${ErrorMessage} {\n    position: absolute;\n    top: -1.5rem;\n  }\n\n  & > input {\n    ${tw`w-full rounded p-2`}\n  }\n\n  &.error input {\n    ${tw`text-pink-400`}\n  }\n`;\n\nexport const SearchTypeContainer = styled.div`\n  ${tw`mt-2 uppercase font-bold`}\n  & > label {\n    ${tw`inline-flex items-center`}\n    span {\n      ${tw`ml-2`}\n    }\n  }\n\n  & > label:nth-child(2) {\n    ${tw`ml-6`}\n  }\n\n`;\n","import React, { useState } from 'react';\nimport { SearchTypeContainer } from \"./styled\";\n\nexport function SearchTypeSelector({\n  onChangeValue,\n}: {\n  onChangeValue: (value: string) => void;\n}) {\n  const [value, setValue] = useState('name');\n\n  // component is small, no need for caching\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (value !== e.target.value) {\n      setValue(e.target.value);\n      onChangeValue(e.target.value);\n    }\n  };\n\n  return (\n    <SearchTypeContainer onChange={onChange}>\n      <label>\n        <input\n          defaultChecked\n          type=\"radio\"\n          className=\"form-radio\"\n          name=\"accountType\"\n          value=\"name\" />\n        <span>By Name</span>\n      </label>\n      <label>\n        <input\n          type=\"radio\"\n          className=\"form-radio\"\n          name=\"accountType\"\n          value=\"date\" />\n        <span>By Date</span>\n      </label>\n    </SearchTypeContainer>\n  );\n}\n","import React from 'react';\nimport Button from '../../app/components/Button';\nimport { SearchBarContainer, ErrorMessage } from \"./styled\";\n\nexport function SearchBar({\n  onChange, errorMessage,\n}: {\n  onChange: (txt: string) => void;\n  errorMessage?: string;\n}) {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(e.target.value);\n  };\n\n  return (\n    <SearchBarContainer className={errorMessage ? 'error' : ''}>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <input\n        onChange={handleChange}\n        type=\"text\"\n        placeholder=\"type the name to start a search\" />\n      <Button\n        primary\n        disabled={!!errorMessage}\n        className=\"px-2\"\n      >\n        Find my beer\n      </Button>\n    </SearchBarContainer>\n  );\n}\n","import { useCallback, useState } from 'react'\nimport { BeerName, FormattedDate } from '../../app/schema'\nimport { SearchTypeSelector } from './SearchTypeSelector'\nimport { SearchBar } from './SearchBar'\nimport { SearchSectionContainer } from './styled'\nimport { fetchBeersByDate, fetchBeersByName } from '../../app/beerSlice'\nimport { useDispatch } from 'react-redux'\n\nexport default function BeerSearch() {\n  const dispatch = useDispatch()\n\n  const [searchType, setSearchType] = useState('name')\n  const [text, setText] = useState('')\n  const [validationMessage, setValidationMessage] = useState<\n    string | undefined\n  >(undefined)\n\n  const handleTextUpdate = useCallback(\n    (text: string) => {\n      let success: boolean\n      let vm\n      if (!text) {\n        setText('')\n        setValidationMessage(undefined)\n        return\n      }\n      if (searchType === 'name') {\n        success = BeerName.validate(text).success\n        vm = 'Only strings, numbers and hyphens are allowed'\n      } else {\n        success = FormattedDate.validate(text).success\n        vm = 'Date should be in YYYY_MM format'\n      }\n      setText(text)\n      setValidationMessage(success ? undefined : vm)\n    },\n    [searchType]\n  )\n\n  const handleSubmit = useCallback((e) => {\n    e.preventDefault()\n    if (searchType === 'name') {\n      dispatch(fetchBeersByName(text))\n    } else {\n      const date = new Date(Date.parse(text))\n      dispatch(fetchBeersByDate(date))\n    }\n\n  }, [text, searchType, dispatch]) \n\n  const handleSearchType = useCallback((t) => {\n    setSearchType(t)\n  }, [setSearchType]) \n\n\n  return (\n    <SearchSectionContainer>\n      <form className=\"filter\" onSubmit={handleSubmit}>\n        <SearchBar\n          errorMessage={validationMessage}\n          onChange={handleTextUpdate}\n        />\n        <SearchTypeSelector onChangeValue={handleSearchType} />\n      </form>\n    </SearchSectionContainer>\n  )\n}\n","import * as components from '../random_beer/styled'\nimport tw, { styled } from 'twin.macro';\nimport { RootState } from '../../app/store'\nimport { useAppSelector } from '../../app/hooks'\n\nconst DEFAULT_IMAGE = 'https://images.punkapi.com/v2/keg.png'\n\nconst getBeeers = (state: RootState) => state.beers.displayItems || []\n\nconst BeerListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center; \n`\n\nconst BeerCardContainer = styled(components.BeerCardContainer)`\n  width: 100%; \n  border-bottom: 3px solid black;\n  box-shadow: none;\n  border-radius: 0;\n  margin-left: 1rem;\n  margin-right: 1rem;\n` \n\nconst ImgContainer = styled(components.ImgContainer)`\n   height: auto\n` \nconst BodyContainer = styled(components.BodyContainer)`` \nconst Header = styled(components.Header)`\n  ${tw`text-base`}\n` \nconst BeerName = styled(components.BeerName)``\nconst Description = styled(components.Description)``\nconst Abv = styled(components.Abv)``\n\n\nexport default function BeerList() {\n  const beers = useAppSelector(getBeeers)\n  return (\n    <BeerListContainer>\n      {beers.map(beer => (\n        <BeerCardContainer state=\"idle\" key={beer.id}>\n          <ImgContainer className=\"h-auto\">\n            <img alt=\"\" src={beer.image_url || DEFAULT_IMAGE} />\n          </ImgContainer>\n          <BodyContainer>\n            <Header>\n              <BeerName>{beer.name}</BeerName>\n              <Abv>Abv.&nbsp;{beer.abv}%</Abv>\n            </Header>\n            <Description>\n              <p>{beer.description}</p>\n            </Description>\n          </BodyContainer>\n        </BeerCardContainer>\n      ))}\n    </BeerListContainer>\n  )\n}\n","import \"./App.css\"\nimport RandomBeer from \"./features/random_beer/RandomBeer\"\nimport BeerSearch from \"./features/beer_search/BeerSearch\"\nimport BeerList from \"./features/beer_search/BeerList\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RandomBeer />\n      <BeerSearch />\n      <BeerList />\n    </div>\n   \n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport beerReducer from './beerSlice'\n\nexport const store = configureStore({\n  reducer: {\n    beers: beerReducer,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport * as s from './app/schema'\nimport * as api from './app/beerApi'\nimport { Provider } from 'react-redux'\nimport { store } from './app/store'\nimport { beerSlice } from './app/beerSlice'\n\nconst w = window as any\nw['api'] = api\nw['schema'] = s\nw['slice'] = beerSlice\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}