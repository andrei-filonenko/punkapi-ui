{"version":3,"sources":["app/components/Spinner.tsx","app/components/Button.tsx","features/random_beer/styled.tsx","app/components/ErrorState.tsx","features/random_beer/BeerCard.tsx","app/hooks.tsx","features/random_beer/selectors.ts","util.ts","app/schema.ts","app/beerApi.ts","app/beerSlice.ts","features/random_beer/RandomBeer.tsx","features/beer_search/styled.tsx","features/beer_search/SearchTypeSelector.tsx","features/beer_search/SearchBar.tsx","features/beer_search/BeerSearch.tsx","app/components/LoadingState.tsx","app/components/EmptyState.tsx","features/beer_search/BeerList.tsx","App.tsx","reportWebVitals.ts","app/store.ts","index.tsx"],"names":["Spinner","className","cn","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","ButtonContainer","styled","button","primary","Button","loading","disabled","children","rest","BeerCardContainer","div","state","ImgContainer","BodyContainer","tw","Header","BeerName","h2","Abv","h3","ActionButtons","Description","ErrorStateStyled","ErrorState","subject","role","BeerCard","beer","onFetchBeer","onFetchNonAlcoholicBeer","errorMessage","isLoading","abv","content","name","description","alt","src","image_url","onClick","useAppSelector","useSelector","getAllNonAlcoholicBeers","Object","values","beers","byId","filter","pickRandom","list","Math","floor","random","length","formatDate","month","getUTCMonth","year","getUTCFullYear","UnitValue","Record","value","Number","nullable","unit","String","Volume","extend","Union","Literal","Temperature","Total","Weight","BoilSpec","temp","duration","Hop","amount","add","attribute","Malt","Ingredients","malt","Array","hops","yeast","Fermentation","Method","mash_temp","fermentation","twist","Beer","attenuation_level","boil_volume","brewers_tips","contributed_by","ebc","first_brewed","food_pairing","ibu","id","ingredients","method","ph","srm","tagline","target_fg","target_og","volume","BeerList","withBrand","withConstraint","str","match","FormattedDate","Date","parse","BeerQueryParams","abv_gt","optional","abv_lt","ibu_gt","ibu_lt","ebc_gt","ebc_lt","beer_name","brewed_before","brewed_after","food","ids","per_page","page","getRandomBeer","a","fetch","resp","json","data","check","getBeersForPage","params","queryParams","entries","map","k","v","encodeURIComponent","join","res","getBeers","loaded","result","concat","exports","compareBeersById","b","fetchBeersByName","createAsyncThunk","thumpApi","getState","nameSearches","hasOwnProperty","toUpperCase","cachedBeersBrewedBefore","timestamp","s","split","m","y","parseInt","parseUSDate","getTime","sort","fetchBeersByDate","query","currentTimestamp","maxDate","brewedAfterDate","fromCache","setMonth","getMonth","missingBeers","nonAlcoholicLoaded","createAction","addBeers","fetchRandomBeer","isNonAlcoholic","currentBeerId","randomBeer","beerApi","nextBeer","_get_beers_action","isNonAlcoholicBeerReceived","dispatch","beerSlice","createSlice","initialState","areBeersLoading","randomBeerState","reducers","addBeer","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","randomBeerError","error","beerListError","displayItems","actions","getBeer","getPanelState","getError","RandomBeer","useDispatch","panelState","fetchBeer","useCallback","fetchNonAlcoholicBeer","message","SearchSectionContainer","ErrorMessage","span","SearchBarContainer","SearchTypeContainer","SearchTypeSelector","onChangeValue","useState","setValue","onChange","e","target","defaultChecked","type","SearchBar","placeholder","preventDefault","getLoadingState","BeerSearch","searchType","setSearchType","text","setText","undefined","validationMessage","setValidationMessage","handleTextUpdate","success","vm","validate","handleSubmit","date","handleSearchType","t","onSubmit","LoadingStateStyled","LoadingState","EmptyStateStyled","EmptyState","getBeeers","components","BeerListContainer","loadingState","emptyState","maybeBeers","isNeverLoaded","isNotFound","PageLoading","App","isAppLoading","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","beerReducer","w","window","api","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a40052b7.chunk.js","sourcesContent":["export default function Spinner({ className }: { className?: string }) {\n  let cn = 'spinner-icon animate-spin mx-2 h-5 w-5'\n  if (className) {\n    cn = `${cn} ${className}`\n  }\n  return (\n    <svg\n      className={cn}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      data-testid=\"spinner\"\n    >\n      <circle\n        className=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth=\"4\"\n      ></circle>\n      <path\n        className=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      ></path>\n    </svg>\n  )\n}\n","import React, { ReactNode } from 'react'\nimport tw, { styled } from 'twin.macro'\nimport Spinner from './Spinner'\n\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children?: ReactNode\n  primary?: boolean\n  loading?: boolean\n}\n\nconst ButtonContainer = styled.button<Props>`\n  ${({ primary }) =>\n    primary\n      ? tw`\n        bg-black text-white \n         hover:bg-gray-700\n      `\n      : tw`\n        border border-gray-300 \n        hover:(text-black border-black)\n    `}\n  ${tw`\n     active:shadow-inner\n     tracking-widest uppercase font-bold\n     transition-colors duration-200\n     flex \n     flex-auto\n     items-center \n     justify-center \n     py-2\n  `}\n  :disabled {\n    ${tw`opacity-75`}\n  }\n`\n\nexport default function Button({\n  primary,\n  loading,\n  disabled,\n  children,\n  ...rest\n}: Props) {\n  return (\n    <ButtonContainer {...{ disabled: disabled || loading, primary }} {...rest}>\n      {loading && <Spinner />}\n      {children}\n    </ButtonContainer>\n  )\n}\n","/**\n * Styled components are too small to warant their own files\n * Cryptic dsl in tw`...` are just class names from tailwind.css which will\n * expand to full properties\n */\nimport tw, { styled } from 'twin.macro'\n\ninterface LoadingProps {\n  state?: 'idle' | 'loading' | 'failure'\n}\n\nexport const BeerCardContainer = styled.div<LoadingProps>`\n  ${({ state = 'idle' }) => state === 'loading' && tw`opacity-50`}\n  ${tw`\n    transition-opacity duration-200\n    md:rounded-md\n    shadow-md my-5\n    flex max-w-7xl \n    mx-auto py-6 sm:px-6 lg:px-8 \n    h-full`}\n`\nexport const ImgContainer = styled.div`\n  ${tw`flex-none w-1/5 relative text-center h-80`}\n  > img {\n    ${tw`absolute mx-auto py-2 inset-0 h-full object-contain`}\n  }\n`\n\nexport const BodyContainer = tw.div`flex flex-col flex-1 ml-5 px-3`\n\nexport const Header = tw.div`flex flex-col font-bold text-xl md:flex-row`\n\nexport const BeerName = tw.h2`tracking-widest uppercase font-bold text-left m-3 text-xl mr-auto`\n\nexport const Abv = tw.h3`px-3 italic font-serif oldstyle-nums my-3 text-left whitespace-nowrap`\n\nexport const ActionButtons = styled.div`\n  ${tw`flex space-x-3 mb-4 mt-auto pr-2 text-sm font-medium flex-col md:flex-row md:ml-3`}\n  && > button:nth-child(2) {\n    ${tw`md:flex-none md:px-3 m-0`}\n  }\n  & > button:nth-child(1) {\n    ${tw`md:(mr-2 mb-0) mb-2`}\n  }\n`\n\nexport const Description = styled.div`\n  ${tw`flex`}\n  > p {\n    ${tw`text-sm p-2 m-1 text-left`}\n  }\n`\n","import React, { ReactNode } from 'react'\nimport tw, { styled } from 'twin.macro'\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  children?: ReactNode\n  subject?: ReactNode\n}\n\nconst ErrorStateStyled = styled.div`\n  ${tw`flex flex-col justify-center text-pink-600 my-8 p-4`}\n\n  & > .icon {\n    ${tw`mx-auto mb-3 text-5xl text-gray-400`}\n  }\n\n  & > .subject {\n    ${tw`mx-auto mb-4 font-bold uppercase`}\n  }\n\n  & > .message {\n    ${tw`text-sm`}\n  }\n`\n\nexport default function ErrorState({ children, subject, ...rest }: Props) {\n  return (\n    <ErrorStateStyled role=\"alert\" {...rest}>\n      <div className=\"icon\">⚠</div>\n      <div className=\"subject\">{subject || 'Error'}</div>\n      <div className=\"message\">{children}</div>\n    </ErrorStateStyled>\n  )\n}\n","import { IBeer } from '../../app/schema'\nimport Button from '../../app/components/Button'\nimport {\n  Header,\n  BeerName,\n  Abv,\n  Description,\n  BeerCardContainer,\n  ImgContainer,\n  BodyContainer,\n  ActionButtons,\n} from './styled'\nimport ErrorState from '../../app/components/ErrorState'\n\nconst DEFAULT_IMAGE = 'https://images.punkapi.com/v2/keg.png'\n\ninterface Props {\n  beer: IBeer\n  onFetchBeer: () => void\n  onFetchNonAlcoholicBeer: () => void\n  state: 'idle' | 'loading' | 'failure'\n  errorMessage?: string\n}\n\nexport default function BeerCard({\n  beer,\n  onFetchBeer,\n  onFetchNonAlcoholicBeer,\n  errorMessage,\n  state = 'idle',\n}: Props) {\n  const isLoading = state === 'loading'\n  const abv = `Abv. ${beer.abv}%`\n  const content = (\n    <>\n      <Header>\n        <BeerName>{isLoading ? 'Loading...' : beer.name}</BeerName>\n        <Abv>{abv}</Abv>\n      </Header>\n      <Description>\n        <p>{beer.description}</p>\n      </Description>\n    </>\n  )\n\n  return (\n    <BeerCardContainer state={state}>\n      <ImgContainer>\n        <img alt=\"\" src={beer.image_url || DEFAULT_IMAGE} />\n      </ImgContainer>\n      <BodyContainer>\n        {state === 'failure' ? (\n          <ErrorState>{errorMessage}</ErrorState>\n        ) : (\n          content\n        )}\n        <ActionButtons>\n          <Button onClick={onFetchBeer} primary loading={isLoading}>\n            Get Random Beer\n          </Button>\n          <Button onClick={onFetchNonAlcoholicBeer} loading={isLoading}>\n            Random Alcohol-Free\n          </Button>\n        </ActionButtons>\n      </BodyContainer>\n    </BeerCardContainer>\n  )\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { RootState } from '../../app/store'\n\n/**\n *\n * Select all non-alcoholic beers from a store\n *\n * @param state\n * @returns list of non-alcholic beers\n */\nexport const getAllNonAlcoholicBeers = (state: RootState) =>\n  Object.values(state.beers.byId).filter((beer) => {\n    return !!beer.abv && beer.abv <= 0.51\n  })\n","export function pickRandom<T>(list: Array<T>): T {\n  return list[Math.floor(Math.random() * list.length)]\n}\n\nexport function formatDate(d: Date) {\n  const month = d.getUTCMonth() + 1\n  const year = d.getUTCFullYear()\n  return `${month}-${year}`\n}\n\nexport function parseUSDate(s: String): Date {\n  const [m, y] = s.split('/')\n  const year = y ? parseInt(y) : parseInt(m)\n  const month = y ? parseInt(m) : 1\n  return new Date(year, month - 1, 1)\n}\n","import { Record, Number, String, Literal, Union, Array, Static } from 'runtypes'\n\nconst UnitValue = Record({\n  value: Number.nullable(),\n  unit: String,\n})\n\nexport const Volume = UnitValue.extend({\n  unit: Union(Literal('ml'), Literal('litres')),\n})\n\nexport const Temperature = UnitValue.extend({\n  unit: Literal('celsius'),\n})\n\nexport const Total = UnitValue.extend({\n  unit: Literal('total'),\n})\n\nexport const Weight = UnitValue.extend({\n  unit: Union(Literal('grams'), Literal('kilograms'), Literal('kilogram')),\n})\n\nexport const BoilSpec = Record({\n  temp: Temperature,\n  duration: Number.nullable(),\n})\n\nexport const Hop = Record({\n  name: String.nullable(),\n  amount: Union(Weight, Volume, Total),\n  add: String.nullable(),\n  attribute: String,\n})\n\nexport const Malt = Record({\n  name: String.nullable(),\n  amount: Weight,\n})\nexport type IMalt = Static<typeof Malt>\n\nexport const Ingredients = Record({\n  malt: Array(Malt),\n  hops: Array(Hop),\n  yeast: String.nullable(),\n})\n\nexport const Fermentation = Record({\n  temp: Temperature,\n})\n\nexport const Method = Record({\n  mash_temp: Array(BoilSpec),\n  fermentation: Fermentation,\n  twist: String.nullable(),\n})\n\nexport const Beer = Record({\n  abv: Number.nullable(),\n  attenuation_level: Number.nullable(),\n  boil_volume: Volume.nullable(),\n  brewers_tips: String.nullable(),\n  contributed_by: String.nullable(),\n  description: String,\n  ebc: Number.nullable(),\n  first_brewed: String.nullable(),\n  food_pairing: Array(String),\n  ibu: Number.nullable(),\n  id: Number,\n  image_url: String.nullable(),\n  ingredients: Ingredients,\n  method: Method,\n  name: String,\n  ph: Number.nullable(),\n  srm: Number.nullable(),\n  tagline: String.nullable(),\n  target_fg: Number.nullable(),\n  target_og: Number.nullable(),\n  volume: Volume,\n})\nexport type IBeer = Static<typeof Beer>\n\nexport const BeerList = Array(Beer)\n\nexport const BeerName = String.withBrand('BeerName').withConstraint(\n  (str) =>\n    !!str.match('^[A-Za-z0-9 -]+$') ||\n    'Search text must contain only hyphens, letters, numbers and spaces'\n)\n\nexport const FormattedDate = BeerName.withBrand('FormattedDate').withConstraint(\n  (str) => {\n    // FIXME: a proper parser should be implemented, or better use a standard calendar pop up\n    return !!Date.parse(str) || 'Can not parse date, use ISO date format'\n  }\n)\n\nexport const BeerQueryParams = Record({\n  abv_gt: Number.optional(), // Returns all beers with ABV greater than the supplied number\n  abv_lt: Number.optional(), // Returns all beers with ABV less than the supplied number\n  ibu_gt: Number.optional(), // Returns all beers with IBU greater than the supplied number\n  ibu_lt: Number.optional(), // Returns all beers with IBU less than the supplied number\n  ebc_gt: Number.optional(), // Returns all beers with EBC greater than the supplied number\n  ebc_lt: Number.optional(), // Returns all beers with EBC less than the supplied number\n  beer_name: String.optional(), // Returns all beers matching the supplied name (this will match partial strings as well so e.g punk will return Punk IPA), if you need to add spaces just add an underscore (_).\n  yeast: String.optional(), // Returns all beers matching the supplied yeast name, this performs a fuzzy match, if you need to add spaces just add an underscore (_).\n  brewed_before: String.optional(), // Returns all beers brewed before this date, the date format is mm-yyyy e.g 10-2011\n  brewed_after: String.optional(), // Returns all beers brewed after this date, the date format is mm-yyyy e.g 10-2011\n  hops: String.optional(), // Returns all beers matching the supplied hops name, this performs a fuzzy match, if you need to add spaces just add an underscore (_).\n  malt: String.optional(), // Returns all beers matching the supplied malt name, this performs a fuzzy match, if you need to add spaces just add an underscore (_).\n  food: String.optional(), // Returns all beers matching the supplied food string, this performs a fuzzy match, if you need to add spaces just add an underscore (_).\n  ids: String.optional(), // (id|id|...)\n  per_page: Number.optional(), // Returns number of beers per page, max=80\n  page: Number.optional(), // Returns a page number\n})\n\nexport type IBeerQueryParams = Static<typeof BeerQueryParams>\n","import {\n  Beer,\n  BeerList,\n  BeerQueryParams,\n  IBeer,\n  IBeerQueryParams,\n} from './schema'\n\nconst PER_PAGE = 80\n\nexport async function getRandomBeer(): Promise<IBeer> {\n  const resp = await fetch('https://api.punkapi.com/v2/beers/random')\n  const data = await resp.json()\n  const beer = Beer.check(data[0])\n  return beer\n}\n\nasync function getBeersForPage(\n  params: IBeerQueryParams,\n  page: number,\n  per_page = PER_PAGE\n): Promise<IBeer[]> {\n  const queryParams = Object.entries({ ...params, page, per_page })\n    .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n    .join('&')\n  const res = await fetch(`https://api.punkapi.com/v2/beers?${queryParams}`)\n  const data = await res.json()\n  return BeerList.check(data)\n}\n\nexport async function getBeers(\n  queryParams: IBeerQueryParams = {},\n  page: number = 1,\n  loaded: IBeer[] = []\n): Promise<IBeer[]> {\n  // do validation of input parameters\n  const params = BeerQueryParams.check(queryParams)\n  const resp = await getBeersForPage(params, page)\n  const result = loaded.concat(resp)\n  if (resp.length < 80) {\n    // return results only if the list is not\n    // populated with results\n    return result\n  }\n  // cycle while list is not exhausted\n  return getBeers(queryParams, page + 1, result)\n}\n\nconst exports = { getRandomBeer, getBeers }\nexport default exports\n","import {\n  createAction,\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit'\nimport { IBeer } from './schema'\nimport { RootState } from './store'\nimport { getAllNonAlcoholicBeers } from '../features/random_beer/selectors'\nimport { formatDate, parseUSDate, pickRandom } from '../util'\nimport beerApi, { getBeers } from './beerApi'\n\nexport interface Error {\n  message?: string\n}\n\nexport interface IBeerState {\n  maxDate: number\n  nameSearches: { [key: string]: number[] }\n  randomBeerState: 'idle' | 'loading' | 'failure'\n  byId: { [id: number]: IBeer }\n  randomBeer?: IBeer\n  isNonAlcoholicBeerReceived?: boolean\n  randomBeerError?: Error\n  beerListError?: Error\n  displayItems?: IBeer[]\n  areBeersLoading: boolean\n}\n\nexport const initialState = {\n  nameSearches: {},\n  maxDate: 0,\n  areBeersLoading: false,\n  randomBeerState: 'idle',\n  byId: {},\n} as IBeerState\n\ntype ApiConfig = { state: RootState }\n\nfunction compareBeersById(a: IBeer, b: IBeer) {\n  if (a.id > b.id) return -1\n  if (a.id < b.id) return 1\n  return 0\n}\n\ninterface NameFetchReturnType {\n  name: string\n  beers: IBeer[]\n}\n\nexport const fetchBeersByName = createAsyncThunk<\n  NameFetchReturnType,\n  string,\n  ApiConfig\n>('beers/fetchBeersByName', async (name, thumpApi) => {\n  const state = thumpApi.getState()\n  // get name by cache\n  // given that backend uses fuzzy search\n  // there is no way to construct a robust partial inclusion order\n  // for search results unless we have the exact distance function\n  // so caching just by search string\n  if (state.beers.nameSearches.hasOwnProperty(name.toUpperCase())) {\n    const beers = state.beers.nameSearches[name.toUpperCase()].map(\n      (id) => state.beers.byId[id]\n    )\n    return {\n      name,\n      beers,\n    }\n  }\n  const beers = await getBeers({ beer_name: name })\n  return { beers, name }\n})\n\nconst cachedBeersBrewedBefore = (timestamp: number) => (state: RootState) => {\n  const beers = Object.values(state.beers.byId).filter((beer) => {\n    if (!beer.first_brewed) {\n      return false\n    }\n    const beerTs = parseUSDate(beer.first_brewed as string).getTime()\n    return beerTs < timestamp\n  })\n  beers.sort(compareBeersById)\n  return beers\n}\ninterface DateFetchReturnType {\n  timestamp: number\n  beers: IBeer[]\n}\n\n// Caching in this action is done by benefiting from\n// the fact that dates are linearly ordered\n// so if query date is before previous date, the results are\n// already in the cache\n// otherwise we need only to fetch entries between these dates\nexport const fetchBeersByDate = createAsyncThunk<\n  DateFetchReturnType,\n  Date,\n  ApiConfig\n>('beers/fetchBeersDate', async (query, thumpApi) => {\n  const timestamp = query.getTime()\n  const state = thumpApi.getState()\n  const currentTimestamp = state.beers.maxDate\n  let beers: IBeer[] = []\n  const brewed_before = formatDate(query)\n  if (currentTimestamp === 0) {\n    beers = await getBeers({ brewed_before })\n    // older beers must already be in the store\n  } else if (timestamp <= currentTimestamp) {\n    beers = cachedBeersBrewedBefore(timestamp)(state)\n  } else {\n    const brewedAfterDate = new Date(currentTimestamp)\n    const fromCache = cachedBeersBrewedBefore(brewedAfterDate.getTime())(state)\n    // retract one month to brewed after to get a closed interval\n    // FIXME: use moment-like library to deal with edge cases\n    brewedAfterDate.setMonth(brewedAfterDate.getMonth() - 1)\n    const brewed_after = formatDate(brewedAfterDate)\n    const missingBeers = await getBeers({ brewed_after, brewed_before })\n    beers = fromCache.concat(missingBeers)\n  }\n  return { beers, timestamp }\n})\n\nexport const nonAlcoholicLoaded = createAction<void>('beers/nonAlcoholicLoaded')\nexport const addBeers = createAction<IBeer[]>('beers/addBeers')\nexport const fetchRandomBeer = createAsyncThunk<\n  IBeer,\n  boolean | undefined,\n  ApiConfig\n>(\n  'beers/fetchRandomBeer',\n  async function _get_beers_action(isNonAlcoholic, thumpApi) {\n    const state = thumpApi.getState()\n    const currentBeerId = state.beers.randomBeer?.id\n    let nextBeer: IBeer\n    if (!isNonAlcoholic) {\n      nextBeer = await beerApi.getRandomBeer()\n      if (currentBeerId === nextBeer.id) {\n        // we should try again if we've got the same id by chance\n        nextBeer = await _get_beers_action(isNonAlcoholic, thumpApi)\n      }\n      return nextBeer\n    }\n    // let's see if the beers are already in the cache\n    if (state.beers.isNonAlcoholicBeerReceived) {\n      const beers = getAllNonAlcoholicBeers(state)\n      // if so pick random one that's not displayed\n      return pickRandom(beers.filter((b) => b.id !== currentBeerId))\n    }\n    const beers = await beerApi.getBeers({ abv_lt: 0.51 })\n    // set flag in the cache that all random beers are already loadeed\n    // we don't have an endpoint for random non-alcoholic beer\n    // so we'll get all of them\n    thumpApi.dispatch(nonAlcoholicLoaded())\n    // load beers into cache for future use\n    thumpApi.dispatch(addBeers(beers))\n    return pickRandom(beers.filter((b) => b.id !== currentBeerId))\n  }\n)\n\nexport const beerSlice = createSlice({\n  name: 'beers',\n  initialState,\n  reducers: {\n    addBeer(state, action: PayloadAction<IBeer>) {\n      state.byId[action.payload.id] = action.payload\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(nonAlcoholicLoaded, (state, action) => {\n        state.isNonAlcoholicBeerReceived = true\n      })\n      .addCase(addBeers, (state, action) => {\n        for (const beer of action.payload) {\n          state.byId[beer.id] = beer\n        }\n      })\n      .addCase(fetchRandomBeer.pending, (state) => {\n        state.randomBeerState = 'loading'\n      })\n      .addCase(fetchRandomBeer.fulfilled, (state, action) => {\n        const beer = action.payload\n        state.randomBeer = beer\n        state.byId[beer.id] = beer\n        state.randomBeerState = 'idle'\n      })\n      .addCase(fetchRandomBeer.rejected, (state, action) => {\n        state.randomBeerState = 'failure'\n        state.randomBeerError = action.error\n      })\n      .addCase(\n        fetchBeersByDate.fulfilled,\n        (state, { payload: { timestamp, beers } }) => {\n          // update cache\n          for (const beer of beers) {\n            state.byId[beer.id] = beer\n          }\n          state.areBeersLoading = false\n          delete state.beerListError\n          if (state.maxDate < timestamp) {\n            state.maxDate = timestamp\n          }\n          state.displayItems = beers\n        }\n      )\n      .addCase(fetchBeersByName.fulfilled, (state, action) => {\n        state.areBeersLoading = false\n        const beers = action.payload.beers\n        const name = action.payload.name.toUpperCase()\n        if (!state.nameSearches.hasOwnProperty(name)) {\n          // remember ids of searched beers\n          state.nameSearches[name] = action.payload.beers.map((b) => b.id)\n          // update cache\n          for (const beer of beers) {\n            state.byId[beer.id] = beer\n          }\n        }\n        delete state.beerListError\n        state.displayItems = action.payload.beers\n      })\n      .addCase(fetchBeersByDate.pending, (state) => {\n        delete state.beerListError\n        state.areBeersLoading = true\n      })\n      .addCase(fetchBeersByName.pending, (state) => {\n        delete state.beerListError\n        state.areBeersLoading = true\n      })\n      .addCase(fetchBeersByDate.rejected, (state, action) => {\n        state.areBeersLoading = false\n        state.beerListError = action.error\n        state.displayItems = []\n      })\n      .addCase(fetchBeersByName.rejected, (state, action) => {\n        state.areBeersLoading = false\n        state.beerListError = action.error\n        state.displayItems = []\n      })\n  },\n})\n\nexport const { addBeer } = beerSlice.actions\n\nexport default beerSlice.reducer\n","import BeerCard from './BeerCard'\nimport { useAppSelector } from '../../app/hooks'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { fetchRandomBeer } from '../../app/beerSlice'\nimport { RootState } from '../../app/store'\n\nconst getBeer = (state: RootState) => state.beers.randomBeer || null\n\nconst getPanelState = (state: RootState) => state.beers.randomBeerState\n\nconst getError = (state: RootState) => state.beers.randomBeerError\n\nexport default function RandomBeer() {\n  const dispatch = useDispatch()\n\n  const beer = useAppSelector(getBeer)\n  const panelState = useAppSelector(getPanelState)\n  const error = useAppSelector(getError)\n\n  const fetchBeer = useCallback(() => {\n    dispatch(fetchRandomBeer())\n  }, [dispatch])\n\n  const fetchNonAlcoholicBeer = useCallback(() => {\n    dispatch(fetchRandomBeer(true))\n  }, [dispatch])\n\n  if (beer !== null) {\n    return (\n      <BeerCard\n        errorMessage={error?.message}\n        beer={beer}\n        onFetchBeer={fetchBeer}\n        onFetchNonAlcoholicBeer={fetchNonAlcoholicBeer}\n        state={panelState}\n      />\n    )\n  }\n  return null\n}\n","import tw, { styled } from 'twin.macro'\n\nexport const SearchSectionContainer = styled.div`\n  ${tw`my-5 flex max-w-7xl mx-auto py-6 sm:px-6 lg:px-8 h-full`}\n  &> form.filter {\n    ${tw`flex flex-col m-3 mt-6 flex-1`}\n  }\n`\n\nexport const ErrorMessage = styled.span`\n  ${tw`p-2 uppercase text-pink-600 text-xs`}\n`\n\nexport const SearchBarContainer = styled.div`\n  ${tw`bg-white shadow relative flex font-bold`}\n\n  && > ${ErrorMessage} {\n    position: absolute;\n    top: -1.5rem;\n  }\n\n  & > input {\n    ${tw`w-full rounded p-2`}\n  }\n\n  &.error input {\n    ${tw`text-pink-400`}\n  }\n`\n\nexport const SearchTypeContainer = styled.div`\n  ${tw`mt-2 uppercase font-bold`}\n  & > label {\n    ${tw`inline-flex items-center`}\n    span {\n      ${tw`ml-2`}\n    }\n  }\n\n  & > label:nth-child(2) {\n    ${tw`ml-6`}\n  }\n`\n","import React, { useState } from 'react'\nimport { SearchTypeContainer } from './styled'\n\nexport function SearchTypeSelector({\n  onChangeValue,\n  isLoading,\n}: {\n  onChangeValue: (value: string) => void\n  isLoading: boolean\n}) {\n  const [value, setValue] = useState('name')\n\n  // component is small, no need for caching\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (value !== e.target.value) {\n      setValue(e.target.value)\n      onChangeValue(e.target.value)\n    }\n  }\n\n  return (\n    <SearchTypeContainer \n      role=\"radiogroup\"\n      onChange={onChange}\n      >\n      <label>\n        <input\n          defaultChecked\n          disabled={isLoading}\n          type=\"radio\"\n          className=\"form-radio\"\n          name=\"searchType\"\n          value=\"name\"\n        />\n        <span>By Name</span>\n      </label>\n      <label>\n        <input\n          disabled={isLoading}\n          type=\"radio\"\n          className=\"form-radio\"\n          name=\"searchType\"\n          value=\"date\"\n        />\n        <span>By Date</span>\n      </label>\n    </SearchTypeContainer>\n  )\n}\n","import React from 'react'\nimport Button from '../../app/components/Button'\nimport { SearchBarContainer, ErrorMessage } from './styled'\n\ninterface Props {\n  onChange: (txt: string) => void\n  errorMessage?: string\n  placeholder: string\n  isLoading: boolean\n}\n\nexport function SearchBar({\n  onChange,\n  errorMessage,\n  placeholder,\n  isLoading,\n}: Props) {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault()\n    onChange(e.target.value)\n  }\n\n  return (\n    <SearchBarContainer className={errorMessage ? 'error' : ''}>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      <input\n        disabled={isLoading}\n        onChange={handleChange}\n        type=\"text\"\n        placeholder={placeholder}\n      />\n      <Button\n        primary\n        disabled={!!errorMessage}\n        loading={isLoading}\n        className=\"px-2\"\n      >\n        Find my beer\n      </Button>\n    </SearchBarContainer>\n  )\n}\n","import { useCallback, useState } from 'react'\nimport { BeerName, FormattedDate } from '../../app/schema'\nimport { SearchTypeSelector } from './SearchTypeSelector'\nimport { SearchBar } from './SearchBar'\nimport { SearchSectionContainer } from './styled'\nimport { fetchBeersByDate, fetchBeersByName } from '../../app/beerSlice'\nimport { useDispatch } from 'react-redux'\nimport { RootState } from '../../app/store'\nimport { useAppSelector } from '../../app/hooks'\n\nconst getLoadingState = (state: RootState) => state.beers.areBeersLoading\n\n\nexport default function BeerSearch() {\n  const dispatch = useDispatch()\n\n  const isLoading = useAppSelector(getLoadingState)\n\n  const [searchType, setSearchType] = useState('name')\n  const [text, setText] = useState('')\n  const [validationMessage, setValidationMessage] = useState<\n    string | undefined\n  >(undefined)\n\n  const handleTextUpdate = useCallback(\n    (text: string) => {\n      let success: boolean\n      let vm\n      if (!text) {\n        setText('')\n        setValidationMessage(undefined)\n        return\n      }\n      if (searchType === 'name') {\n        success = BeerName.validate(text).success\n        vm = 'Only strings, numbers and hyphens are allowed'\n      } else {\n        success = FormattedDate.validate(text).success\n        vm = 'Date should be in YYYY_MM format'\n      }\n      setText(text)\n      setValidationMessage(success ? undefined : vm)\n    },\n    [searchType]\n  )\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault()\n      if (!text?.length) {\n        return\n      }\n      if (searchType === 'name') {\n        dispatch(fetchBeersByName(text))\n      } else {\n        const date = new Date(Date.parse(text))\n        dispatch(fetchBeersByDate(date))\n      }\n    },\n    [text, searchType, dispatch]\n  )\n\n  const handleSearchType = useCallback(\n    (t) => {\n      setSearchType(t)\n    },\n    [setSearchType]\n  )\n\n  return (\n    <SearchSectionContainer>\n      <form className=\"filter\" role=\"search\" onSubmit={handleSubmit}>\n        <SearchBar\n          isLoading={isLoading}\n          placeholder={\n            searchType === 'date'\n              ? 'Type a date beer brewed before e.g. 2019 or 2018-10'\n              : 'Search by beer name'\n          }\n          errorMessage={validationMessage}\n          onChange={handleTextUpdate}\n        />\n        <SearchTypeSelector \n          isLoading={isLoading}\n          onChangeValue={handleSearchType}\n        />\n      </form>\n    </SearchSectionContainer>\n  )\n}\n","import React, { ReactNode } from 'react'\nimport Spinner from './Spinner'\nimport tw, { styled } from 'twin.macro'\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  children?: ReactNode\n}\n\nconst LoadingStateStyled = styled.div`\n  ${tw`flex flex-col justify-center text-gray-600 my-8 p-4`}\n  & > .spinner {\n    ${tw`mx-auto mb-4`}\n  }\n`\n\nexport default function LoadingState({ children, ...rest }: Props) {\n  return (\n    <LoadingStateStyled role=\"alert\" aria-busy=\"true\" {...rest}>\n      <Spinner className=\"spinner\" />\n      <div className=\"description\">{children || 'Loading...'}</div>\n    </LoadingStateStyled>\n  )\n}\n","import React, { ReactNode } from 'react'\nimport tw, { styled } from 'twin.macro'\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  children?: ReactNode\n  subject?: ReactNode\n}\n\nconst EmptyStateStyled = styled.div`\n  ${tw`flex flex-col justify-center text-gray-600 my-8 p-4`}\n\n  & > .icon {\n    ${tw`mx-auto mb-3 text-5xl text-gray-400`}\n  }\n\n  & > .subject {\n    ${tw`mx-auto mb-4 font-bold uppercase`}\n  }\n\n  & > .description {\n    ${tw`text-sm`}\n  }\n`\n\nexport default function EmptyState({ children, subject, ...rest }: Props) {\n  return (\n    <EmptyStateStyled role=\"alert\" {...rest}>\n      <div className=\"icon\">∅</div>\n      <div className=\"subject\">{subject || 'No items loaded'}</div>\n      <div className=\"description\">{children}</div>\n    </EmptyStateStyled>\n  )\n}\n","import * as components from '../random_beer/styled'\nimport tw, { styled } from 'twin.macro'\nimport { RootState } from '../../app/store'\nimport { useAppSelector } from '../../app/hooks'\nimport LoadingState from '../../app/components/LoadingState'\nimport EmptyState from '../../app/components/EmptyState'\nimport ErrorState from '../../app/components/ErrorState'\n\nconst DEFAULT_IMAGE = 'https://images.punkapi.com/v2/keg.png'\n\nconst getBeeers = (state: RootState) => state.beers.displayItems\nconst getLoadingState = (state: RootState) => state.beers.areBeersLoading\nconst getError = (state: RootState) => state.beers.beerListError\n\nconst BeerCardContainer = styled(components.BeerCardContainer)`\n  width: 100%;\n  border-bottom: 3px solid black;\n  box-shadow: none;\n  border-radius: 0;\n  margin-left: 1rem;\n  margin-right: 1rem;\n`\n\nconst BeerListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  & > ${BeerCardContainer}:last-child {\n    border-bottom: none;\n  }\n`\n\nconst ImgContainer = styled(components.ImgContainer)`\n  height: auto;\n`\nconst BodyContainer = styled(components.BodyContainer)``\nconst Header = styled(components.Header)`\n  ${tw`text-base`}\n`\nconst BeerName = styled(components.BeerName)``\nconst Description = styled(components.Description)``\nconst Abv = styled(components.Abv)``\n\nconst loadingState = <LoadingState>Loading list of beers...</LoadingState>\n\nconst emptyState = (\n  <EmptyState subject=\"No beers found\">\n    Adjust search to find your beer\n  </EmptyState>\n)\n\nconst initialState = (\n  <EmptyState subject=\"Find awesome beer recepies\">\n    Use search field to find the beer you like.\n  </EmptyState>\n)\n\nexport default function BeerList() {\n  const maybeBeers = useAppSelector(getBeeers)\n  const isLoading = useAppSelector(getLoadingState)\n  const error = useAppSelector(getError)\n\n  const isNeverLoaded = !error && !isLoading && maybeBeers === undefined\n  const beers = maybeBeers || []\n  const isNotFound = !error && !isLoading && !isNeverLoaded && !beers.length\n\n  return (\n    <BeerListContainer>\n      {error && <ErrorState>{error.message}</ErrorState>}\n      {isNeverLoaded && initialState}\n      {isNotFound && emptyState}\n      {isLoading && loadingState}\n      {beers.map((beer) => (\n        <BeerCardContainer state=\"idle\" key={beer.id}>\n          <ImgContainer className=\"h-auto\">\n            <img alt=\"\" src={beer.image_url || DEFAULT_IMAGE} />\n          </ImgContainer>\n          <BodyContainer>\n            <Header>\n              <BeerName>{beer.name}</BeerName>\n              <Abv>Abv.&nbsp;{beer.abv}%</Abv>\n            </Header>\n            <Description>\n              <p>{beer.description}</p>\n            </Description>\n          </BodyContainer>\n        </BeerCardContainer>\n      ))}\n    </BeerListContainer>\n  )\n}\n","import RandomBeer from './features/random_beer/RandomBeer'\nimport BeerSearch from './features/beer_search/BeerSearch'\nimport LoadingState from './app/components/LoadingState'\nimport BeerList from './features/beer_search/BeerList'\nimport { useAppSelector } from './app/hooks'\nimport { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { fetchRandomBeer } from './app/beerSlice'\nimport tw, { styled } from 'twin.macro'\n\nconst PageLoading = styled.div`\n  ${tw`flex justify-center py-24`}\n`\n\nfunction App() {\n  // app is fully loaded only when random beer query is done\n  // which is supposed to run on page load\n  const isAppLoading = useAppSelector((state) => !state.beers.randomBeer)\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(fetchRandomBeer())\n  }, [dispatch])\n\n  return (\n    <div className=\"App\">\n      {isAppLoading ? (\n        <PageLoading>\n          <LoadingState />\n        </PageLoading>\n      ) : (\n        <>\n          <RandomBeer />\n          <BeerSearch />\n          <BeerList />\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport beerReducer from './beerSlice'\n\nexport const store = configureStore({\n  reducer: {\n    beers: beerReducer,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport * as s from './app/schema'\nimport * as api from './app/beerApi'\nimport { Provider } from 'react-redux'\nimport { store } from './app/store'\nimport { beerSlice } from './app/beerSlice'\n\nconst w = window as any\nw['api'] = api\nw['schema'] = s\nw['slice'] = beerSlice\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}